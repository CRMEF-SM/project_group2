[{"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/index.js":"1","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/App.js":"2","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/Home.js":"3","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/parent/AddParent.js":"4","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/student/AddStudent.js":"5","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/parent/Parents.js":"6","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/student/Students.js":"7","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/authentification/SignIn.js":"8","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Main.js":"9","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Header.js":"10","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/context/AuthProvider.js":"11","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Footer.js":"12","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Sidenav.js":"13"},{"size":862,"mtime":1648497837683,"results":"14","hashOfConfig":"15"},{"size":1574,"mtime":1648497837599,"results":"16","hashOfConfig":"15"},{"size":5060,"mtime":1648497837683,"results":"17","hashOfConfig":"15"},{"size":6962,"mtime":1648497837683,"results":"18","hashOfConfig":"15"},{"size":6337,"mtime":1648497837687,"results":"19","hashOfConfig":"15"},{"size":8162,"mtime":1648497837683,"results":"20","hashOfConfig":"15"},{"size":8312,"mtime":1648497837687,"results":"21","hashOfConfig":"15"},{"size":5473,"mtime":1648497837683,"results":"22","hashOfConfig":"15"},{"size":3653,"mtime":1648497837683,"results":"23","hashOfConfig":"15"},{"size":2511,"mtime":1648497837683,"results":"24","hashOfConfig":"15"},{"size":342,"mtime":1648497837683,"results":"25","hashOfConfig":"15"},{"size":260,"mtime":1648497837683,"results":"26","hashOfConfig":"15"},{"size":3507,"mtime":1648497837683,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19oggod",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/index.js",[],"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/App.js",["62","63"],"\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Parents from \"./pages/parent/Parents\";\nimport Forum from \"./pages/parent/AddParent\";\nimport AddStudent from \"./pages/student/AddStudent\";\nimport SignIn from \"./pages/authentification/SignIn\";\nimport Main from \"./components/layout/Main\";\nimport Students from \"./pages/student/Students\"\nimport \"antd/dist/antd.css\";\nimport \"./assets/styles/main.css\";\nimport \"./assets/styles/responsive.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(\n    () => localStorage.getItem('logged_user') !== null\n  );\n\n  useEffect(() => {\n    localStorage.setItem('logged_user', JSON.stringify(isLoggedIn));\n  }, [isLoggedIn]);\n\n  \n  const logIn = () => setIsLoggedIn(true);\n\n  // pass this callback to components you want to allow logging out\n  // it will update the local state and then get persisted\n  const logOut = () => setIsLoggedIn(false);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/sign-in\" exact component={SignIn} />\n        <Main>\n          <Route exact path=\"/dashboard\" component={Home} />\n          <Route exact path=\"/parents\" component={Parents} />\n          <Route exact path=\"/students\" component={Students} />\n          <Route exact path=\"/students/Forum\" component={AddStudent} />\n          \n          <Route exact path=\"/parent/Forum\" component={Forum} />\n          <Redirect from=\"*\" to=\"/dashboard\" />\n        </Main>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/Home.js",["64","65","66","67","68"],"// @ts-nocheck\n\n\nimport {\n  Card,\n  Col,\n  Row,\n  Typography,\n  Upload,\n  message,\n  Button,\n} from \"antd\";\nimport {\n  ToTopOutlined,\n} from \"@ant-design/icons\";\n\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\n\nfunction Home() {\n  const { Title} = Typography;\n\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState([]);\n  \n\n  //users count\n  const getCount = async () => {\n  await axios.get(`http://localhost:3004/userCount`)\n  .then((response) =>{\n    const counts = response.data.count;\n    console.log(\"counts\",counts);\n    setCount(counts );\n} );\n  \n  }\n\n  // students who are waiting for there parents- ist \n  const  getWaiting = async () => {\n    await axios.get(`http://localhost:3004/waiting`)\n    .then((response) =>{\n      const waiting = response.data;\n      console.log(\"waiting\",waiting);\n      setData(waiting );\n  } );\n    \n    }\n\n  useEffect(()=> getWaiting(),\n  getCount(),[]);\n\n  const profile = [\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 20 20\"\n      fill=\"#5CA89F\"\n      color=\"#5CA89F\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        d=\"M9 6C9 7.65685 7.65685 9 6 9C4.34315 9 3 7.65685 3 6C3 4.34315 4.34315 3 6 3C7.65685 3 9 4.34315 9 6Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M17 6C17 7.65685 15.6569 9 14 9C12.3431 9 11 7.65685 11 6C11 4.34315 12.3431 3 14 3C15.6569 3 17 4.34315 17 6Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M12.9291 17C12.9758 16.6734 13 16.3395 13 16C13 14.3648 12.4393 12.8606 11.4998 11.6691C12.2352 11.2435 13.0892 11 14 11C16.7614 11 19 13.2386 19 16V17H12.9291Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M6 11C8.76142 11 11 13.2386 11 16V17H1V16C1 13.2386 3.23858 11 6 11Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>,\n  ];\n  \n  const counting = [\n    \n    {\n      today: \"Users\",\n      title: count,\n      icon: profile,\n      bnb: \"bnb2\",\n    }\n  ];\n\n\n  \n  return (\n    <>\n      <div className=\"layout-content\">\n        <Row className=\"rowgap-vbox\" gutter={[24, 0]}>\n          {counting.map((c, index) => (\n            <Col\n              key={index}\n              xs={24}\n              sm={24}\n              md={12}\n              lg={6}\n              xl={6}\n              className=\"mb-24\"\n            >\n              <Card bordered={false} className=\"criclebox \">\n                <div className=\"number\">\n                  <Row align=\"middle\" gutter={[24, 0]}>\n                    <Col xs={18}>\n                      <span>{c.today}</span>\n                      <Title level={3}>\n                        {c.title} <small className={c.bnb}>{c.persent}</small>\n                      </Title>\n                    </Col>\n                    <Col xs={6}>\n                      <div className=\"icon-box\">{c.icon}</div>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n\n      \n\n        <Row gutter={[24, 0]}>\n          <Col sm={24} md={24}  className=\"mb-24\">\n            <Card bordered={false} className=\"criclebox cardbody h-full\">\n             \n              <div className=\"ant-list-box table-responsive\">\n              <Table className=\"table-hover table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-0\">Image</th>\n                      <th className=\"border-0\">Name</th>\n                      <th className=\"border-0\">Adress</th>\n                      <th className=\"border-0\">Level</th>\n                      <th className=\"border-0\">Birth date</th>\n                      <th className=\"border-0\">Phone</th>\n                      <th className=\"border-0\">Enter Time</th>\n                      <th className=\"border-0\">Quit Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {data.map((waiting) => (\n                    <tr>\n                      <td>{waiting.id}</td>\n                      <td>{waiting.name}</td>\n                      <td>{waiting.adress}</td>\n                      <td>{waiting.level}</td>\n                      <td>{waiting.birthDate}</td>\n                      <td>{waiting.phone}</td>\n                      <td>{waiting.enterTime}</td>\n                      <td>{waiting.quitTime}</td>\n                      \n                    </tr>\n                     ))}\n                  </tbody>\n                </Table>\n              </div>\n              {/* <div className=\"uploadfile shadow-none\">\n                <Upload {...uploadProps}>\n                  <Button\n                    type=\"dashed\"\n                    className=\"ant-full-box\"\n                    icon={<ToTopOutlined />}\n                  >\n                    <span className=\"click\">Click to Upload</span>\n                  </Button>\n                </Upload>\n              </div> */}\n            </Card>\n          </Col>\n         \n        </Row>\n\n        \n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/parent/AddParent.js",["69","70"],"// @ts-nocheck\n\nimport { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Avatar,\n  Form,\n  Input,\n  Upload,\n  message,\n} from \"antd\";\n\nimport {\n  VerticalAlignTopOutlined,\n} from \"@ant-design/icons\";\n\nimport profilavatar from \"../../assets/images/face-1.jpg\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nfunction Forum() {  \n  const [imageURL, setImageURL] = useState(false);\n  const [, setLoading] = useState(false);\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const [cin, setCin] = useState('');\n  const [adresse, setAdresse] = useState('');\n  const [phone, setPhone] = useState('');\n  const history = useHistory();\n\n\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setLoading(false);\n        setImageURL(info);\n      });\n    \n  };\n\n  const onFinish  = async (e) => {\n    await axios.post('http://localhost:3004/parent',\n         { nom : nom,\n          prenom : prenom,\n          cin : cin,\n          phone : phone,\n          adresse : adresse}\n        ) .then(function (response) {\n          \n          console.log(response);\n        })\n    history.push('/parents')\n  }\n\n  \n\n  const uploadButton = (\n    <div className=\"ant-upload-text font-semibold text-dark\">\n      {<VerticalAlignTopOutlined style={{ width: 20, color: \"#000\" }} />}\n      <div>Upload New Image</div>\n    </div>\n  );\n\n\n  return (\n    <>\n     \n      <Card\n        title={\n          <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n           \n              <Col span={6} md={6} className=\"col-info\">\n              <Upload\n              name=\"image\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader projects-uploader\"\n              showUploadList={false}\n              //action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              \n              {imageURL ? (\n               <Col span={6} md={6} className=\"col-info\">\n              <Avatar.Group>\n                <Avatar size={100} shape=\"square\" src={imageURL} />\n              </Avatar.Group> <p>{imageURL}</p>\n              <div>hey youuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu</div>\n              </Col>\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n           \n            </Col>\n            <Col span={24} md={24} className=\"col-info\">\n            <Form\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n            <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n            <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"First name\"\n                    name=\"nom\"\n                    onChange={e => setNom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your name\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"First name\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Last name\"\n                    name=\"prenom\"\n                    onChange={e => setPrenom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Last name!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Last name\" />\n                  </Form.Item>\n                  </Col>\n\n\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Cin\"\n                    name=\"cin\"\n                    onChange={e => setCin(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your CIN!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Cin\" />\n                  </Form.Item>\n                   </Col>\n\n                   <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Phone\"\n                    name=\"phone\"\n                    onChange={e => setPhone(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Phone number!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Phone\" />\n                  </Form.Item>\n                  </Col>\n\n\n                   <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Adress\"\n                    name=\"adress\"\n                    onChange={e => setAdresse(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Adress!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Adress\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item>\n                    <Button\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" ,\n                      background:\"#5CA89F\" ,\n                    color: \"white\"}}\n                    >\n                      Add\n                    </Button>\n                  </Form.Item>\n                  </Col>\n                </Row>\n                </Form>\n                </Col>\n          </Row>\n        }\n      ></Card>\n\n     \n    </>\n  );\n}\n\nexport default Forum;\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/student/AddStudent.js",["71","72","73"],"// @ts-nocheck\n\nimport { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Avatar,\n  Form,\n  Input,\n  Upload,\n  message,\n} from \"antd\";\n\nimport {\n  VerticalAlignTopOutlined,\n} from \"@ant-design/icons\";\n\nimport profilavatar from \"../../assets/images/face-1.jpg\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nfunction AddStudent() {  \n  const [imageURL, setImageURL] = useState(false);\n  const [, setLoading] = useState(false);\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const [niveau, setNiveau] = useState('');\n  const [adresse, setAdresse] = useState('');\n  const history = useHistory();\n\n\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setLoading(false);\n        setImageURL(info);\n      });\n    \n  };\n\n  const onFinish  = async (e) => {\n    await axios.post('http://localhost:3004/student',\n         { nom : nom,\n          prenom : prenom,\n          niveau : niveau,\n          adresse : adresse}\n        ) .then(function (response) {\n          \n          console.log(response);\n        })\n    //history.push('/students');\n  }\n\n  \n\n  const uploadButton = (\n    <div className=\"ant-upload-text font-semibold text-dark\">\n      {<VerticalAlignTopOutlined style={{ width: 20, color: \"#000\" }} />}\n      <div>Upload New Image</div>\n    </div>\n  );\n\n\n  return (\n    <>\n     \n      <Card\n        title={\n          <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n           \n              <Col span={6} md={6} className=\"col-info\">\n              <Upload\n              name=\"image\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader projects-uploader\"\n              showUploadList={false}\n              //action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              \n              {imageURL ? (\n               <Col span={6} md={6} className=\"col-info\">\n              <Avatar.Group>\n                <Avatar size={100} shape=\"square\" src={imageURL} />\n              </Avatar.Group> <p>{imageURL}</p>\n              <div>hey youuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu</div>\n              </Col>\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n           \n            </Col>\n            <Col span={24} md={24} className=\"col-info\">\n            <Form\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n            <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n            <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"First name\"\n                    name=\"nom\"\n                    onChange={e => setNom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your name\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"First name\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Last name\"\n                    name=\"prenom\"\n                    onChange={e => setPrenom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Last name!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Last name\" />\n                  </Form.Item>\n                  </Col>\n\n\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Level\"\n                    name=\"niveau\"\n                    onChange={e => setNiveau(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Level!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Level\" />\n                  </Form.Item>\n                   </Col>\n\n\n\n                   <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Adress\"\n                    name=\"adress\"\n                    onChange={e => setAdresse(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Adress!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Adress\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item>\n                    <Button\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" ,\n                      background:\"#5CA89F\" ,\n                    color: \"white\"}}\n                    >\n                      Add\n                    </Button>\n                  </Form.Item>\n                  </Col>\n                </Row>\n                </Form>\n                </Col>\n          </Row>\n        }\n      ></Card>\n\n     \n    </>\n  );\n}\n\nexport default AddStudent;\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/parent/Parents.js",["74","75","76","77"],"// @ts-nocheck\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react-bootstrap components\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Typography,\n  Table,\n  Modal,\n  Input,\n  Form,\n} from \"antd\";\n\n\n// Images\nimport face2 from \"../../assets/images/face-2.jpg\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Title } = Typography;\n\n\n\nfunction Parents() {\n  const [data, setData] = useState([]);\n  const history = useHistory();\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const [cin, setCin] = useState('');\n  const [adresse, setAdresse] = useState('');\n  const [phone, setPhone] = useState('');\n\n// table code start\nconst columns = [\n  {\n    title: \"First Name\",\n    dataIndex: \"nom\",\n    key: \"nom\",\n     width: \"40%\",\n  },\n  {\n    title: \"Last Name\",\n    dataIndex: \"prenom\",\n    key: \"prenom\",\n     width: \"40%\",\n  },\n  {\n    title: \"CIN\",\n    dataIndex: \"cin\",\n    key: \"cin\",\n     width: \"40%\",\n  },\n  {\n    title: \"Adress\",\n    dataIndex: \"adresse\",\n    key: \"adresse\",\n    width: \"40%\",\n  },\n\n  {\n    title: \"Phone\",\n    key: \"phone\",\n    dataIndex: \"phone\",\n    width: \"40%\",\n  },\n  {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (record) => {\n      return (\n        <>\n          <EditOutlined\n            onClick={() => {\n\n              onEditStudent(record);\n            }}\n          />\n          <DeleteOutlined\n            onClick={() => {\n\n              onDeleteStudent(record);\n            }}\n            style={{ color: \"red\", marginLeft: 12 }}\n          />\n        </>\n      )}\n          }\n];\nconst [isEditing, setIsEditing] = useState(false);\nconst [editingStudent, setEditingStudent] = useState(null);\n\nconst handleDelete = person => {\n  axios\n  .delete(`http://localhost:3004/parent/${person.id}`)\n  .then(response => {\n  });  \n  history.push('/parents');\n}\n\n\n\nconst onEditStudent = async (record) => {\n  setIsEditing(true);\n  await axios.put(`http://localhost:3004/parent/${record.id}`,\n  { nom : nom,\n   prenom : prenom,\n   cin : cin,\n   phone : phone,\n   adresse : adresse}\n ) .then(function (response) {\n   \n   console.log(response);\n })\n};\nconst resetEditing = () => {\n  setIsEditing(false);\n  setEditingStudent(null);\n};\n\nconst getParent = async () => {\nawait axios.get(`http://localhost:3004/parent`)\n.then((response) =>{\n  const parents = response.data;\n  console.log(\"parents\",parents);\n  setData(parents);\n});\n\n}\n\n\nuseEffect(()=> getParent(),[]);\n\n\nconst onFinish  = async (e,person) => {\n  e.preventDefault();\n  await axios.put(`http://localhost:3004/parent/${person}`,\n       { nom : nom,\n        prenom : prenom,\n        cin : cin,\n        phone : phone,\n        adresse : adresse}\n      ) .then(function (response) {\n        \n        console.log(response);\n      })\n}\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nconst onDeleteStudent = (record) => {\n  Modal.confirm({\n    title: \"Are you sure, you want to delete this student record?\",\n    okText: \"Yes\",\n    okType: \"danger\",\n    onOk: () => {\n     handleDelete(record);\n    },\n  });\n};\n\n  return (\n    <>\n      <div className=\"tabled\">\n        <Row gutter={[24, 0]}>\n          <Col xs=\"24\" xl={24}>\n            <Card\n              bordered={false}\n              className=\"criclebox tablespace mb-24\"\n              title=\"Parents list\"\n            >\n              <Col xs=\"24\" xl={6}>\n               <Button\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" ,\n                      background:\"#5CA89F\" ,\n                      color: \"white\"}}\n                      onClick={() => { history.push('/parent/Forum') }}\n                    \n                    >\n                      Add new parent\n                    </Button>\n              </Col>\n              <div className=\"table-responsive\">\n              <Table\n                  columns={columns}\n                  dataSource={data}\n                  pagination={false}\n                  className=\"ant-border-space\"\n                />\n              </div>\n            </Card>\n\n          </Col>\n        </Row>\n        <Modal\n          title=\"Edit Parent\"\n          visible={isEditing}\n          okText=\"Save\"\n          onCancel={() => {\n            resetEditing();\n          }}\n          onOk={() => {\n            setData((pre) => {\n              return pre.map((student) => {\n                if (student.id === editingStudent.id) {\n                  return editingStudent;\n                } else {\n                  return student;\n                }\n              });\n            });\n            resetEditing();\n          }}\n        >\n       <Form\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n            <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n            <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"First name\"\n                    name=\"nom\"\n                    onChange={e => setNom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your name\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"First name\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Last name\"\n                    name=\"prenom\"\n                    onChange={e => setPrenom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Last name!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Last name\" />\n                  </Form.Item>\n                  </Col>\n\n\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Cin\"\n                    name=\"cin\"\n                    onChange={e => setCin(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your CIN!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Cin\" />\n                  </Form.Item>\n                   </Col>\n\n                   <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Phone\"\n                    name=\"phone\"\n                    onChange={e => setPhone(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Phone number!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Phone\" />\n                  </Form.Item>\n                  </Col>\n\n\n                   <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Adress\"\n                    name=\"adress\"\n                    onChange={e => setAdresse(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Adress!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Adress\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={24} md={24} className=\"col-info\">\n                 \n                  </Col>\n                </Row>\n                </Form>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Parents;","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/student/Students.js",["78","79","80"],"// @ts-nocheck\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react-bootstrap components\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Button,\n  Avatar,\n  Typography,\n  Form,\n  Modal,\n  Input,\n} from \"antd\";\n\n\n// Images\nimport face2 from \"../../assets/images/face-2.jpg\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Title } = Typography;\n\n\n\nconst dataTable = [ \n  \n  {\n    name: (\n      <>\n        <Avatar.Group>\n          <Avatar\n            className=\"shape-avatar\"\n            shape=\"square\"\n            size={40}\n            src={face2}\n          ></Avatar>\n          <div className=\"avatar-info\">\n            <Title level={5}>Michael John</Title>\n            <p>michael@mail.com</p>\n          </div>\n        </Avatar.Group>{\" \"}\n      </>\n    ),\n    function: (\n      <>\n        <div className=\"author-info\">\n          <Title level={5}>Manager</Title>\n          <p>Organization</p>\n        </div>\n      </>\n    ),\n\n    status: (\n      <>\n        <Button type=\"primary\" className=\"tag-primary\">\n          ONLINE\n        </Button>\n      </>\n    ),\n    employed: (\n      <>\n        <div className=\"ant-employed\">\n          <span>23/04/18</span>\n          <a href=\"#pablo\">Edit</a>\n        </div>\n      </>\n    ),\n  },\n\n\n]   \n\nfunction Tables() {\n  const [data, setData] = useState([]);\n  const history = useHistory();\n  const [isEditing, setIsEditing] = useState(false);\nconst [editingStudent, setEditingStudent] = useState(null);\nconst [nom, setNom] = useState('');\nconst [prenom, setPrenom] = useState('');\nconst [niveau, setNiveau] = useState('');\nconst [adresse, setAdresse] = useState('');\n\n// table code start\nconst columns = [\n  {\n    title: \"Student\",\n    dataIndex: \"nom\",\n    key: \"nom\",\n    width: \"40%\",\n  },\n  {\n    title: \"Last name\",\n    dataIndex: \"prenom\",\n    key: \"prenom\",\n    width: \"40%\",\n  },\n  {\n    title: \"Adress\",\n    dataIndex: \"adresse\",\n    key: \"adresse\",\n    width: \"40%\",\n  },\n  {\n    title: \"Level\",\n    key: \"niveau\",\n    dataIndex: \"niveau\",\n    width: \"40%\",\n  },\n  {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (record) => {\n      return (\n        <>\n          <EditOutlined\n            onClick={() => {\n\n              onEditStudent(record);\n            }}\n          />\n          <DeleteOutlined\n            onClick={() => {\n\n              onDeleteStudent(record);\n            }}\n            style={{ color: \"red\", marginLeft: 12 }}\n          />\n        </>\n      )}\n          }\n];\n\n\n\n\nconst onEditStudent = async (record) => {\n  setIsEditing(true);\n  await axios.put(`http://localhost:3004/student/${record.id}`,\n  { nom : nom,\n   prenom : prenom,\n   niveau : niveau,\n   adresse : adresse}\n ) .then(function (response) {\n   \n   console.log(response);\n })\n};\nconst resetEditing = () => {\n  setIsEditing(false);\n  setEditingStudent(null);\n};\n\n\nconst getStudent = async () => {\nawait axios.get(`http://localhost:3004/student`)\n.then((response) =>{\n  const Students = response.data;\n  console.log(\"Students\",Students);\n  setData(Students );\n} );\n\n}\n\nconst handleDelete = person => {\n  axios\n  .delete(`http://localhost:3004/Student/${person.id}`)\n  .then(response => {\n  \n  });  \n}\n\nuseEffect(()=> getStudent(),[]);\n\nconst onFinish  = async (e,person) => {\n  e.preventDefault();\n  await axios.put(`http://localhost:3004/student/${person}`,\n       { nom : nom,\n        prenom : prenom,\n        niveau : niveau,\n        adresse : adresse}\n      ) .then(function (response) {\n        \n        console.log(response);\n      })\n}\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nconst onDeleteStudent = (record) => {\n  Modal.confirm({\n    title: \"Are you sure, you want to delete this student record?\",\n    okText: \"Yes\",\n    okType: \"danger\",\n    onOk: () => {\n     handleDelete(record);\n    },\n  });\n};\n\n  return (\n    <>\n      <div className=\"tabled\">\n        <Row gutter={[24, 0]}>\n          <Col xs=\"24\" xl={24}>\n            <Card\n              bordered={false}\n              className=\"criclebox tablespace mb-24\"\n              title=\"Students list\"\n            >\n               <Col xs=\"24\" xl={6}>\n               <Button\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" ,\n                      background:\"#5CA89F\" ,\n                      color: \"white\"}}\n                      onClick={() => { history.push('/students/Forum') }}\n                    \n                    >\n                      Add new Student\n                    </Button>\n              </Col>\n              <div className=\"table-responsive\">\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  pagination={false}\n                  className=\"ant-border-space\"\n                />\n              </div>\n            </Card>\n\n          </Col>\n        </Row>\n        <Modal\n          title=\"Edit Student infos \"\n          visible={isEditing}\n          okText=\"Save\"\n          onCancel={() => {\n            resetEditing();\n          }}\n          onOk={() => {\n            setData((pre) => {\n              return pre.map((student) => {\n                if (student.id === editingStudent.id) {\n                  return editingStudent;\n                } else {\n                  return student;\n                }\n              });\n            });\n            resetEditing();\n          }}\n        >\n       <Form\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n            <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n            <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"First name\"\n                    name=\"nom\"\n                    onChange={e => setNom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your name\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"First name\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Last name\"\n                    name=\"prenom\"\n                    onChange={e => setPrenom(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Last name!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Last name\" />\n                  </Form.Item>\n                  </Col>\n\n\n                  <Col span={12} md={12} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Level\"\n                    name=\"cin\"\n                    onChange={e => setNiveau(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Level!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Level\" />\n                  </Form.Item>\n                   </Col>\n\n\n\n                   <Col span={24} md={24} className=\"col-info\">\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Adress\"\n                    name=\"adress\"\n                    onChange={e => setAdresse(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Adress!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Adress\" />\n                  </Form.Item>\n                  </Col>\n                  <Col span={24} md={24} className=\"col-info\">\n                 \n                  </Col>\n                </Row>\n                </Form>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Tables;","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/pages/authentification/SignIn.js",["81","82","83","84","85"],"// @ts-nocheck\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport AuthContext from \"../../context/AuthProvider\";\nimport {\n  Layout,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Form,\n  Input,\n} from \"antd\";\nimport signinbg from \"../../assets/images/children.jpg\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst { Title } = Typography;\nconst { Header, Footer, Content } = Layout;\n\nexport default function  SignIn ()  {\n\n\n  \n\n    const [email, setEmail] = useState('admin@admin.com');\n    const [password, setPassword] = useState('password');\n    const {setAuth } = useContext(AuthContext);\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n    const userRef = useRef();\n    const errRef = useRef();\n    const history = useHistory();\n   \n\n  useEffect(() => {\n      setErrMsg('');\n  }, [email, password])\n\n\n    const handleSubmit = async (e) => {\n      history.push('/dashboard')\n\n\n      // remove comments to the section below so u can add login api \n      //else if u didn't remove it u can connect by whatever the email and password u want \n\n\n\n\n      //e.preventDefault();\n\n      // try {\n      //     const response = await axios.post('',\n      //         JSON.stringify({ email, password }),\n      //         {\n      //             headers: { 'Content-Type': 'application/json' }\n      //         }\n      //     );\n      //     console.log(JSON.stringify(response?.data));\n      //     //console.log(JSON.stringify(response));\n      //     //const accessToken = response?.data?.accessToken;\n      //     setAuth({ email, password});\n      //     setSuccess(true);\n      // } catch (err) {\n      //     if (!err?.response) {\n      //         setErrMsg('No Server Response');\n      //     } else if (err.response?.status === 400) {\n      //         setErrMsg('Missing Email or Password');\n      //     } else if (err.response?.status === 401) {\n      //         setErrMsg('Unauthorized');\n      //     } else {\n      //         setErrMsg('Login Failed');\n      //     }\n      //     errRef.current.focus();\n      // }\n      \n    }\n\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n\n\n    return (\n      <>\n        <Layout className=\"layout-default layout-signin\"> \n        \n          <Header>\n            <div className=\"header-col header-brand\"> \n            <h5>Kid's Campus</h5>\n              {/* <img src={logo} sizes={20} alt=\"\" /> */}\n            </div>\n            \n          </Header>\n          {success ? (\n                <section>\n                    <h1>You are logged in!</h1>\n                    <br />\n                    <p>\n                        <a href=\"#\">Go to Home</a>\n                    </p>\n                </section>\n            ) : (\n          <Content className=\"signin\">\n\n          <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n            <Row gutter={[24, 0]} justify=\"space-around\">\n              <Col\n                xs={{ span: 24, offset: 0 }}\n                lg={{ span: 6, offset: 2 }}\n                md={{ span: 12 }}\n              >\n                <Title className=\"mb-15\">Sign In</Title>\n                <Title className=\"font-regular text-muted\" level={5}>\n                  Enter your email and password to sign in\n                </Title>\n                <Form\n                  onFinish={handleSubmit}\n                  onFinishFailed={onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={e => setEmail(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your email!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Email\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Password\"\n                    name=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your password!\",\n                      },\n                    ]}\n                  >\n                    <Input type=\"password\" placeholder=\"Password\" />\n                  </Form.Item>\n\n                  \n\n                  <Form.Item>\n                    <Button\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" ,\n                      background:\"#5CA89F\" ,\n                    color: \"white\"}}\n                    >\n                      SIGN IN\n                    </Button>\n                  </Form.Item>\n                \n                </Form>\n              </Col>\n              <Col\n                className=\"sign-img\"\n                style={{ padding: 12 }}\n                xs={{ span: 24 }}\n                lg={{ span: 12 }}\n                md={{ span: 12 }}\n              >\n                <img src={signinbg} alt=\"\" />\n              </Col>\n            </Row>\n          </Content>\n            )}\n          <Footer>\n\n            \n          </Footer>\n        </Layout>\n      </>\n    );\n  \n}\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Main.js",[],"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Header.js",["86","87","88","89","90","91","92"],"// @ts-nocheck\n\n\nimport { useState, useEffect } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Breadcrumb,\n  Input,\n  Typography,\n} from \"antd\";\n\nimport {\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nimport { NavLink, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ButtonContainer = styled.div`\n  .ant-btn-primary {\n    background-color: #1890ff;\n  }\n  .ant-btn-success {\n    background-color: #52c41a;\n  }\n  .ant-btn-yellow {\n    background-color: #fadb14;\n  }\n  .ant-btn-black {\n    background-color: #262626;\n    color: #fff;\n    border: 0px;\n    border-radius: 5px;\n  }\n  .ant-switch-active {\n    background-color: #1890ff;\n  }\n`;\n\nconst profile = [\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    key={0}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM12 7C12 8.10457 11.1046 9 10 9C8.89543 9 8 8.10457 8 7C8 5.89543 8.89543 5 10 5C11.1046 5 12 5.89543 12 7ZM9.99993 11C7.98239 11 6.24394 12.195 5.45374 13.9157C6.55403 15.192 8.18265 16 9.99998 16C11.8173 16 13.4459 15.1921 14.5462 13.9158C13.756 12.195 12.0175 11 9.99993 11Z\"\n      fill=\"#111827\"\n    ></path>\n  </svg>,\n];\n\n\n\n\nfunction Header({\n  name,\n  subName,\n}) {\n  const { Title, Text } = Typography;\n\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => window.scrollTo(0, 0));\n\n  const showDrawer = () => setVisible(true);\n  return (\n    <>\n     \n      <Row gutter={[24, 0]}>\n        <Col span={24} md={6}>\n          <Breadcrumb>\n            <Breadcrumb.Item>\n              <NavLink to=\"/\">Pages</NavLink>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item style={{ textTransform: \"capitalize\" }}>\n              {name.replace(\"/\", \"\")}\n            </Breadcrumb.Item>\n          </Breadcrumb>\n          <div className=\"ant-page-header-heading\">\n            <span\n              className=\"ant-page-header-heading-title\"\n              style={{ textTransform: \"capitalize\" }}\n            >\n              {subName.replace(\"/\", \"\")}\n            </span>\n          </div>\n        </Col>\n        <Col span={24} md={18} className=\"header-control\">\n         \n         \n       \n         \n          <Link to=\"/sign-in\" className=\"btn-sign-in\">\n            {profile}\n            <span>Log out</span>\n          </Link>\n         \n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default Header;\n","/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/context/AuthProvider.js",[],"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Footer.js",[],"/opt/lampp/sites/RFID/Front-end/Admin-Panel/src/components/layout/Sidenav.js",[],{"ruleId":"93","severity":1,"message":"94","line":26,"column":9,"nodeType":"95","messageId":"96","endLine":26,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":30,"column":9,"nodeType":"95","messageId":"96","endLine":30,"endColumn":15},{"ruleId":"93","severity":1,"message":"98","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"99","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":10},{"ruleId":"93","severity":1,"message":"100","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":9},{"ruleId":"93","severity":1,"message":"101","line":14,"column":3,"nodeType":"95","messageId":"96","endLine":14,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":52,"column":3,"nodeType":"104","endLine":52,"endColumn":13},{"ruleId":"93","severity":1,"message":"105","line":21,"column":8,"nodeType":"95","messageId":"96","endLine":21,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":69,"column":11,"nodeType":"108","messageId":"109","endLine":75,"endColumn":16,"fix":"110"},{"ruleId":"93","severity":1,"message":"105","line":21,"column":8,"nodeType":"95","messageId":"96","endLine":21,"endColumn":20},{"ruleId":"93","severity":1,"message":"111","line":32,"column":9,"nodeType":"95","messageId":"96","endLine":32,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":68,"column":11,"nodeType":"108","messageId":"109","endLine":73,"endColumn":16,"fix":"112"},{"ruleId":"93","severity":1,"message":"113","line":19,"column":8,"nodeType":"95","messageId":"96","endLine":19,"endColumn":13},{"ruleId":"93","severity":1,"message":"114","line":23,"column":9,"nodeType":"95","messageId":"96","endLine":23,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":107,"column":9,"nodeType":"108","messageId":"109","endLine":113,"endColumn":9,"fix":"115"},{"ruleId":"106","severity":1,"message":"107","line":139,"column":9,"nodeType":"108","messageId":"109","endLine":145,"endColumn":14,"fix":"116"},{"ruleId":"93","severity":1,"message":"117","line":28,"column":7,"nodeType":"95","messageId":"96","endLine":28,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":141,"column":9,"nodeType":"108","messageId":"109","endLine":146,"endColumn":9,"fix":"118"},{"ruleId":"106","severity":1,"message":"107","line":179,"column":9,"nodeType":"108","messageId":"109","endLine":184,"endColumn":14,"fix":"119"},{"ruleId":"93","severity":1,"message":"120","line":15,"column":8,"nodeType":"95","messageId":"96","endLine":15,"endColumn":13},{"ruleId":"93","severity":1,"message":"121","line":28,"column":12,"nodeType":"95","messageId":"96","endLine":28,"endColumn":19},{"ruleId":"93","severity":1,"message":"122","line":30,"column":21,"nodeType":"95","messageId":"96","endLine":30,"endColumn":31},{"ruleId":"93","severity":1,"message":"123","line":31,"column":11,"nodeType":"95","messageId":"96","endLine":31,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":102,"column":25,"nodeType":"126","endLine":102,"endColumn":37},{"ruleId":"93","severity":1,"message":"127","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":8},{"ruleId":"93","severity":1,"message":"128","line":15,"column":3,"nodeType":"95","messageId":"96","endLine":15,"endColumn":17},{"ruleId":"93","severity":1,"message":"129","line":21,"column":7,"nodeType":"95","messageId":"96","endLine":21,"endColumn":22},{"ruleId":"93","severity":1,"message":"114","line":67,"column":11,"nodeType":"95","messageId":"96","endLine":67,"endColumn":16},{"ruleId":"93","severity":1,"message":"130","line":67,"column":18,"nodeType":"95","messageId":"96","endLine":67,"endColumn":22},{"ruleId":"93","severity":1,"message":"131","line":69,"column":10,"nodeType":"95","messageId":"96","endLine":69,"endColumn":17},{"ruleId":"93","severity":1,"message":"132","line":73,"column":9,"nodeType":"95","messageId":"96","endLine":73,"endColumn":19},"no-unused-vars","'logIn' is assigned a value but never used.","Identifier","unusedVar","'logOut' is assigned a value but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'Button' is defined but never used.","'ToTopOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","CallExpression","'profilavatar' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"133","text":"134"},"'history' is assigned a value but never used.",{"range":"135","text":"134"},"'face2' is defined but never used.","'Title' is assigned a value but never used.",{"range":"136","text":"134"},{"range":"137","text":"134"},"'dataTable' is assigned a value but never used.",{"range":"138","text":"134"},{"range":"139","text":"134"},"'axios' is defined but never used.","'setAuth' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'userRef' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Input' is defined but never used.","'SearchOutlined' is defined but never used.","'ButtonContainer' is assigned a value but never used.","'Text' is assigned a value but never used.","'visible' is assigned a value but never used.","'showDrawer' is assigned a value but never used.",[1738,1740],".",[1689,1691],[2153,2155],[2776,2778],[2752,2754],[3500,3502]]